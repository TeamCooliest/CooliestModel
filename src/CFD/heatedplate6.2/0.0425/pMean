/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.0425";
    object      pMean;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -1 -2 0 0 0 0];

internalField   nonuniform List<scalar> 
1080
(
100652
100646
100643
100636
100632
100625
100620
100614
100608
100603
100597
100592
100587
100583
100578
100573
100569
100565
100560
100556
100552
100547
100543
100539
100535
100531
100526
100522
100518
100514
100510
100505
100501
100497
100493
100489
100485
100480
100476
100472
100649
100644
100642
100635
100631
100625
100620
100614
100608
100603
100597
100592
100588
100583
100578
100574
100569
100565
100560
100556
100552
100547
100543
100539
100535
100531
100526
100522
100518
100514
100510
100506
100501
100497
100493
100489
100485
100480
100476
100472
100649
100643
100641
100635
100631
100625
100620
100614
100609
100603
100598
100593
100588
100583
100578
100574
100569
100565
100560
100556
100552
100547
100543
100539
100535
100531
100526
100522
100518
100514
100510
100505
100501
100497
100493
100489
100485
100480
100476
100472
100647
100642
100640
100634
100630
100624
100620
100614
100609
100603
100598
100593
100588
100583
100579
100574
100569
100565
100561
100556
100552
100548
100543
100539
100535
100531
100526
100522
100518
100514
100510
100506
100501
100497
100493
100489
100485
100480
100476
100472
100647
100642
100640
100634
100630
100624
100620
100614
100609
100603
100598
100593
100588
100583
100579
100574
100570
100565
100561
100556
100552
100548
100543
100539
100535
100531
100526
100522
100518
100514
100510
100506
100501
100497
100493
100489
100485
100480
100476
100472
100647
100641
100640
100634
100630
100624
100620
100614
100609
100603
100598
100593
100588
100584
100579
100574
100570
100565
100561
100556
100552
100548
100543
100539
100535
100531
100526
100522
100518
100514
100510
100506
100501
100497
100493
100489
100485
100480
100476
100472
100647
100641
100640
100634
100630
100624
100620
100614
100609
100603
100598
100593
100588
100584
100579
100574
100570
100565
100561
100556
100552
100548
100543
100539
100535
100531
100526
100522
100518
100514
100510
100506
100501
100497
100493
100489
100485
100480
100476
100472
100647
100642
100640
100634
100630
100624
100620
100614
100609
100603
100598
100593
100588
100583
100579
100574
100570
100565
100561
100556
100552
100548
100543
100539
100535
100531
100526
100522
100518
100514
100510
100506
100501
100497
100493
100489
100485
100480
100476
100472
100647
100642
100640
100634
100630
100624
100620
100614
100609
100603
100598
100593
100588
100583
100579
100574
100569
100565
100561
100556
100552
100548
100543
100539
100535
100531
100526
100522
100518
100514
100510
100506
100501
100497
100493
100489
100485
100480
100476
100472
100649
100643
100641
100635
100631
100625
100620
100614
100609
100603
100598
100593
100588
100583
100578
100574
100569
100565
100560
100556
100552
100547
100543
100539
100535
100531
100526
100522
100518
100514
100510
100505
100501
100497
100493
100489
100485
100480
100476
100472
100649
100644
100642
100635
100631
100625
100620
100614
100608
100603
100597
100592
100588
100583
100578
100574
100569
100565
100560
100556
100552
100547
100543
100539
100535
100531
100526
100522
100518
100514
100510
100506
100501
100497
100493
100489
100485
100480
100476
100472
100652
100646
100643
100636
100632
100625
100620
100614
100608
100603
100597
100592
100587
100583
100578
100573
100569
100565
100560
100556
100552
100547
100543
100539
100535
100531
100526
100522
100518
100514
100510
100505
100501
100497
100493
100489
100485
100480
100476
100472
100468
100464
100459
100455
100451
100447
100443
100438
100434
100430
100468
100464
100459
100455
100451
100447
100443
100438
100434
100430
100468
100464
100459
100455
100451
100447
100443
100438
100434
100430
100468
100464
100459
100455
100451
100447
100443
100438
100434
100430
100468
100464
100459
100455
100451
100447
100442
100438
100434
100430
100468
100464
100459
100455
100451
100447
100442
100438
100434
100430
100468
100464
100459
100455
100451
100447
100442
100438
100434
100430
100468
100464
100459
100455
100451
100447
100442
100438
100434
100430
100468
100464
100459
100455
100451
100447
100443
100438
100434
100430
100468
100464
100459
100455
100451
100447
100443
100438
100434
100430
100468
100464
100459
100455
100451
100447
100443
100438
100434
100430
100468
100464
100459
100455
100451
100447
100443
100438
100434
100430
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100345
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100271
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100345
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100272
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100344
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100272
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100344
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100272
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100344
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100272
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100388
100383
100379
100375
100370
100366
100362
100357
100353
100349
100344
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100272
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100388
100383
100379
100375
100370
100366
100362
100357
100353
100349
100344
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100272
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100344
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100272
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100344
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100272
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100344
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100272
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100345
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100271
100267
100263
100259
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100345
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100271
100267
100263
100259
)
;

boundaryField
{
    upperWall
    {
        type            calculated;
        value           nonuniform List<scalar> 
90
(
100652
100646
100643
100636
100632
100625
100620
100614
100608
100603
100597
100592
100587
100583
100578
100573
100569
100565
100560
100556
100552
100547
100543
100539
100535
100531
100526
100522
100518
100514
100510
100505
100501
100497
100493
100489
100485
100480
100476
100472
100468
100464
100459
100455
100451
100447
100443
100438
100434
100430
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100345
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100271
100267
100263
100259
)
;
    }
    lowerWall
    {
        type            calculated;
        value           nonuniform List<scalar> 
80
(
100652
100646
100643
100636
100632
100625
100620
100614
100608
100603
100597
100592
100587
100583
100578
100573
100569
100565
100560
100556
100552
100547
100543
100539
100535
100531
100526
100522
100518
100514
100510
100505
100501
100497
100493
100489
100485
100480
100476
100472
100426
100421
100417
100413
100409
100404
100400
100396
100392
100387
100383
100379
100375
100370
100366
100362
100357
100353
100349
100345
100340
100336
100332
100327
100323
100319
100315
100310
100306
100302
100297
100293
100289
100284
100280
100276
100271
100267
100263
100259
)
;
    }
    heatedWall
    {
        type            calculated;
        value           nonuniform List<scalar> 10(100468 100464 100459 100455 100451 100447 100443 100438 100434 100430);
    }
    inlet
    {
        type            calculated;
        value           nonuniform List<scalar> 
12
(
100652
100649
100649
100647
100647
100647
100647
100647
100647
100649
100649
100652
)
;
    }
    outlet
    {
        type            calculated;
        value           nonuniform List<scalar> 
12
(
100256
100256
100256
100256
100256
100256
100256
100256
100256
100256
100256
100256
)
;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
