/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.075";
    object      T;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 1 0 0 0];

internalField   nonuniform List<scalar> 
400
(
300.842
302.721
304.187
305.156
305.709
305.962
306.021
305.978
305.895
305.811
305.745
305.703
305.684
305.684
305.7
305.728
305.763
305.8
305.833
305.856
300.276
301.33
302.42
303.293
303.839
304.095
304.147
304.085
303.976
303.865
303.773
303.708
303.669
303.655
303.661
303.682
303.715
303.754
303.793
303.823
300.087
300.617
301.339
302.029
302.521
302.772
302.824
302.747
302.612
302.468
302.342
302.246
302.182
302.146
302.136
302.145
302.171
302.207
302.25
302.289
300.026
300.29
300.73
301.216
301.614
301.851
301.916
301.849
301.711
301.553
301.408
301.292
301.208
301.155
301.128
301.123
301.136
301.163
301.2
301.239
300.007
300.132
300.381
300.697
300.997
301.208
301.29
301.254
301.141
300.996
300.855
300.736
300.646
300.585
300.548
300.532
300.533
300.546
300.57
300.6
300.002
300.059
300.191
300.384
300.594
300.764
300.851
300.848
300.773
300.661
300.543
300.438
300.355
300.296
300.257
300.236
300.228
300.23
300.241
300.258
300
300.025
300.093
300.204
300.34
300.464
300.543
300.56
300.522
300.448
300.362
300.279
300.211
300.161
300.126
300.105
300.094
300.09
300.092
300.099
300
300.011
300.043
300.104
300.186
300.269
300.33
300.354
300.342
300.301
300.245
300.188
300.137
300.098
300.071
300.053
300.043
300.037
300.035
300.036
300
300.004
300.02
300.051
300.097
300.147
300.189
300.212
300.213
300.194
300.163
300.127
300.093
300.066
300.046
300.033
300.024
300.019
300.016
300.014
300
300.001
300.008
300.024
300.048
300.076
300.102
300.119
300.125
300.118
300.103
300.083
300.063
300.046
300.033
300.024
300.018
300.014
300.011
300.009
300
300
300.003
300.011
300.023
300.037
300.052
300.062
300.068
300.067
300.061
300.051
300.041
300.031
300.023
300.018
300.014
300.012
300.01
300.008
300
300
300.001
300.005
300.01
300.017
300.024
300.03
300.034
300.035
300.033
300.029
300.024
300.02
300.016
300.013
300.011
300.01
300.01
300.008
300
300
300
300.002
300.004
300.007
300.01
300.013
300.016
300.017
300.016
300.015
300.013
300.011
300.01
300.009
300.008
300.008
300.008
300.008
300
300
300
300.001
300.001
300.002
300.004
300.005
300.006
300.007
300.007
300.007
300.007
300.006
300.006
300.006
300.006
300.006
300.006
300.007
300
300
300
300
300
300.001
300.001
300.002
300.002
300.002
300.003
300.003
300.003
300.003
300.003
300.003
300.003
300.004
300.005
300.005
300
300
300
300
300
300
300
300
300
300.001
300.001
300.001
300.001
300.001
300.001
300.001
300.002
300.003
300.003
300.004
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300.001
300.001
300.002
300.002
300.003
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300.001
300.001
300.002
300.001
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300.001
300.001
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
)
;

boundaryField
{
    upperWall
    {
        type            fixedValue;
        value           uniform 300;
    }
    lowerWall
    {
        type            fixedGradient;
        gradient        uniform 5000;
    }
    inlet
    {
        type            fixedValue;
        value           uniform 300;
    }
    outlet
    {
        type            inletOutlet;
        inletValue      uniform 300;
        value           nonuniform List<scalar> 
20
(
305.856
303.823
302.289
301.239
300.6
300.259
300.1
300.036
300.014
300.009
300.008
300.009
300.008
300.007
300.005
300.004
300.003
300.002
300.001
300
)
;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
